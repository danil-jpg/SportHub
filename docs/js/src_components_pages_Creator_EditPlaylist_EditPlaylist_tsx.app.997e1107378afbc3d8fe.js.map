{"version":3,"file":"js/src_components_pages_Creator_EditPlaylist_EditPlaylist_tsx.app.997e1107378afbc3d8fe.js","mappings":"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","sources":["webpack://sporthub/./src/components/pages/Creator/EditPlaylist/EditPlaylist.tsx","webpack://sporthub/./src/components/pages/Creator/EditPlaylist/EditPlaylist.scss","webpack://sporthub/./src/components/pages/Creator/EditPlaylist/EditPlaylist.scss?5be6"],"sourcesContent":["import React, { FC, ReactNode, useEffect, useState } from 'react';\r\nimport './EditPlaylist.scss';\r\nimport Button from '../../../ui/Button/Button';\r\nimport IconRenderer from '../../../ui/IconRenderer/IconRenderer';\r\nimport '../CrPlaylist/CreatePlaylist.scss';\r\nimport InputContainer from '../../../ui/Forms/InputContainer/InputContainer';\r\nimport SelectContainer from '../../../ui/Forms/SelectContainer/SelectContainer';\r\nimport Input from '../../../ui/Forms/Input/Input';\r\nimport { useAppSelector } from '../../../hooks/redux';\r\nimport { IVideo } from '../Home/CrHome';\r\nimport Video from '../Video/Video';\r\nimport getDate from '../../../utils/getDate';\r\nimport { v1 } from 'uuid';\r\nimport TextareaContainer from '../../../ui/Forms/TextareaContainer/TextareaContainer';\r\nimport swal from 'sweetalert';\r\nimport { updateDoc, getDoc } from 'firebase/firestore';\r\nimport { DB } from '../../../../config/firebase-config';\r\nimport { doc } from 'firebase/firestore';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport Loading from '../../../common/Loading/Loading';\r\n\r\nconst EditPlaylist: FC = () => {\r\n    const [burgerMenu, setBurgerMenu] = useState<boolean>(false);\r\n    const [searchInput, setSearchInput] = useState('');\r\n\r\n    const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n    const [numOfVideos, setNumOfVideos] = useState<number>(2);\r\n\r\n    const [selectState, setSelectState] = useState('');\r\n    const [titleInput, setTitleInput] = useState<string>('');\r\n    const [textAreaInput, setTextAreaInput] = useState<string>('');\r\n\r\n    const [saveBtnState, setSaveBtnState] = useState<boolean>(true);\r\n\r\n    const selector = useAppSelector((state) => state.regSlice.regData);\r\n    const videosIds = useAppSelector((state) => state.regSlice.regData.videosIds);\r\n\r\n    const [playlistVideoObj, setPlaylistVideoObj] = useState<IVideo[]>([]);\r\n    const [allVideos, setAllVideos] = useState<IVideo[]>([]);\r\n    const filteredVideos: IVideo[] | undefined = allVideos;\r\n    const [selectedArrState, setSelectedArrState] = useState<[boolean[], IVideo[] | any]>([Array(filteredVideos?.length).fill(false), Array(filteredVideos?.length).fill({})]);\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const index: string | null = searchParams.get('playlist-index');\r\n\r\n    const navigation = useNavigate();\r\n\r\n    // useEffect(() => {\r\n    //     console.log(selectedArrState);\r\n    // }, [selectedArrState]);\r\n\r\n    useEffect(() => {\r\n        if (videosIds && videosIds?.length > 0) {\r\n            videosIds.map(async (el) => {\r\n                const docRef = await doc(DB, 'videos', el);\r\n                const getVideo = await getDoc(docRef);\r\n                if (getVideo.data()) {\r\n                    setAllVideos((prev: any) => [...prev, getVideo.data()]);\r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const getPlaylist = async () => {\r\n        try {\r\n            const documentRef = await doc(DB, 'users', selector.email);\r\n            const data = await getDoc(documentRef);\r\n            let concretePlaylist = await data.data();\r\n            index ? (concretePlaylist = concretePlaylist?.playlists[index]) : '';\r\n            setTitleInput(concretePlaylist?.title);\r\n            setTextAreaInput(concretePlaylist?.description);\r\n            setSelectState(concretePlaylist?.type);\r\n            //\r\n\r\n            if (index && data.data()?.playlists[+index].videos) {\r\n                data.data()?.playlists[+index].videos.map(async (innerEl: any) => {\r\n                    const docRef = await doc(DB, 'videos', innerEl);\r\n                    const getVideoItem = (await getDoc(docRef)).data();\r\n\r\n                    setPlaylistVideoObj((prev: any) => [...prev, { ...getVideoItem, vidId: innerEl }]);\r\n                });\r\n            }\r\n\r\n            setIsLoaded(true);\r\n\r\n            setNumOfVideos(concretePlaylist?.videos.length);\r\n        } catch (e) {\r\n            setIsLoaded(true);\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setSelectedArrState((prev) => [\r\n            prev[0].map((el) => {\r\n                playlistVideoObj.map((innerEl: any) => {\r\n                    videosIds ? (prev[0][videosIds.indexOf(innerEl.vidId)] = true) : '';\r\n                    return true;\r\n                });\r\n                if (el === true) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }),\r\n            prev[1].map((el: any, index: number) => {\r\n                playlistVideoObj.map((innerEl: any) => {\r\n                    videosIds ? (prev[0][videosIds.indexOf(innerEl.vidId)] = true) : '';\r\n\r\n                    if (videosIds && videosIds.indexOf(innerEl.vidId) === index) {\r\n                        el[index] = innerEl;\r\n                        return el[index];\r\n                    }\r\n                    return '';\r\n                });\r\n                if (el[index]?.title) {\r\n                    return el[index];\r\n                } else {\r\n                    return {};\r\n                }\r\n            }),\r\n        ]);\r\n    }, [playlistVideoObj]);\r\n\r\n    const countNumberOfVideos = (): number => {\r\n        let num = 0;\r\n        for (let i = 0; i < selectedArrState[0].length; i++) {\r\n            if (selectedArrState[0][i]) {\r\n                num++;\r\n            }\r\n        }\r\n        return num;\r\n    };\r\n\r\n    const filterVideosArrFunc = (): ReactNode[] | undefined => {\r\n        const res = filteredVideos\r\n            ?.filter((el) => el.title.toUpperCase().includes(searchInput.toUpperCase()))\r\n            .map((el, index) => {\r\n                return (\r\n                    <div\r\n                        key={v1()}\r\n                        onClick={(e) => {\r\n                            setSelectedArrState((prev) => {\r\n                                const res = [...prev[0]];\r\n                                res[index] = !res[index];\r\n                                //\r\n                                const vidoesArr = [...prev[1]];\r\n                                if (res[index]) {\r\n                                    vidoesArr[index] = el;\r\n                                } else {\r\n                                    vidoesArr[index] = {};\r\n                                }\r\n                                return [res, vidoesArr];\r\n                            });\r\n                        }}\r\n                    >\r\n                        <Video\r\n                            className={`${selectedArrState[0][index] ? 'video-active' : ''} video-cr-playlist`}\r\n                            previewUrl={el.previewUrl}\r\n                            title={el.title}\r\n                            date={getDate(el.date)}\r\n                            isClickAble={false}\r\n                        ></Video>\r\n                    </div>\r\n                );\r\n            });\r\n\r\n        return res;\r\n    };\r\n\r\n    const checkIfVideoHadChoosen = (): ReactNode | '' => {\r\n        let status = false;\r\n        for (let i = 0; i < selectedArrState[0].length; i++) {\r\n            if (selectedArrState[0][i] === true) {\r\n                status = true;\r\n                break;\r\n            }\r\n        }\r\n        return status ? (\r\n            <>\r\n                <p className='cr-playlist__selected'>Selected</p>{' '}\r\n                <ul className='cr-playlist__chosen-ul'>\r\n                    {selectedArrState[1].map((el: any, index: any) => {\r\n                        return el.title ? (\r\n                            <li key={v1()} className='cr-playlist__chosen-li'>\r\n                                {el.title}\r\n                                <IconRenderer\r\n                                    id='small-cross'\r\n                                    onClick={() =>\r\n                                        setSelectedArrState((prev) => {\r\n                                            const res = [...prev[0]];\r\n                                            res[index] = !res[index];\r\n                                            //\r\n                                            const vidoesArr = [...prev[1]];\r\n                                            if (res[index]) {\r\n                                                vidoesArr[index] = el;\r\n                                            } else {\r\n                                                vidoesArr[index] = [];\r\n                                            }\r\n                                            return [res, vidoesArr];\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </li>\r\n                        ) : (\r\n                            ''\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </>\r\n        ) : (\r\n            ''\r\n        );\r\n    };\r\n\r\n    const onSaveClick = async () => {\r\n        if (selectState && selectState !== 'Select category' && titleInput && textAreaInput && countNumberOfVideos() > 1) {\r\n            const oldData = await getDoc(doc(DB, 'users', selector.email)).then((res) => res.data()?.playlists);\r\n\r\n            oldData.splice(index, 1, {\r\n                title: titleInput,\r\n                description: textAreaInput,\r\n                type: selectState,\r\n                videos: selectedArrState[0]\r\n                    .map((el, index) => {\r\n                        if (el === true) {\r\n                            return videosIds ? videosIds[index] : '';\r\n                        }\r\n                    })\r\n                    .filter((el) => {\r\n                        return el !== undefined;\r\n                    }),\r\n            });\r\n\r\n            if (oldData) {\r\n                await updateDoc(doc(DB, 'users', selector.email), {\r\n                    playlists: [...oldData],\r\n                })\r\n                    .then(() => swal('Successfully changed'))\r\n                    .then(() => navigation('../home-cr-playlist'));\r\n            }\r\n        } else {\r\n            swal('Fill out all fields and select at least two video');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPlaylist();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setSelectedArrState([Array(filteredVideos?.length).fill(false), Array(filteredVideos?.length).fill({})]);\r\n    }, [filteredVideos]);\r\n\r\n    useEffect(() => {\r\n        if (selectState && selectState !== 'Select category' && titleInput && textAreaInput && countNumberOfVideos() > 1) {\r\n            setSaveBtnState(true);\r\n        } else {\r\n            setSaveBtnState(false);\r\n        }\r\n    }, [selectState, titleInput, textAreaInput, numOfVideos, selectedArrState]);\r\n\r\n    if (!isLoaded) return <Loading></Loading>;\r\n    return (\r\n        <div className='cr-playlist'>\r\n            <div className='cr-playlist__top'>\r\n                <p className='cr-playlist__title'>Edit playlist</p>\r\n                <div className='cr-playlist__top-right'>\r\n                    <Button className={`${saveBtnState ? 'active' : ''} cr-playlist__top_btn`} onClickHandler={() => onSaveClick()}>\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div className='cr-playlist__center'>\r\n                <div>\r\n                    <InputContainer\r\n                        text='Playlist name'\r\n                        placeholder='Enter playlist name'\r\n                        value={titleInput}\r\n                        onChangeHandler={(e) => setTitleInput(e.target.value)}\r\n                    ></InputContainer>\r\n                    <TextareaContainer\r\n                        value={textAreaInput}\r\n                        onChangeHandler={(e) => setTextAreaInput(e.target.value)}\r\n                        text='Description'\r\n                        placeholder='Description'\r\n                    ></TextareaContainer>\r\n                    <SelectContainer setValue={setSelectState} value={selectState} title='Category' placeholder='Select category' arr={['Mind', 'Body', 'Soul']}></SelectContainer>\r\n                    {checkIfVideoHadChoosen()}\r\n\r\n                    <Button className='cr-playlist__center_select-videos' onClickHandler={() => setBurgerMenu(true)}>\r\n                        Select video\r\n                    </Button>\r\n                </div>\r\n                <div className={`cr-playlist__center__right  ${burgerMenu ? 'active' : ''} `}>\r\n                    <div className='cr-playlist__center__right_selected'>\r\n                        <p className='cr-playlist_selected-text'>\r\n                            Selected:\r\n                            {countNumberOfVideos()}\r\n                        </p>\r\n                        <IconRenderer id='cross' onClick={() => setBurgerMenu(false)} />\r\n                    </div>\r\n                    <Input placeholder='Search' value={searchInput} onChangeHandler={(e) => setSearchInput(e.target.value)} />\r\n\r\n                    {filterVideosArrFunc()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPlaylist;\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./EditPlaylist.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./EditPlaylist.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["React","useEffect","useState","Button","IconRenderer","InputContainer","SelectContainer","Input","useAppSelector","Video","getDate","v1","TextareaContainer","swal","updateDoc","getDoc","DB","doc","useNavigate","useSearchParams","Loading","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EditPlaylist","_useState","_useState2","_slicedToArray","burgerMenu","setBurgerMenu","_useState3","_useState4","searchInput","setSearchInput","_useState5","_useState6","isLoaded","setIsLoaded","_useState7","_useState8","numOfVideos","setNumOfVideos","_useState9","_useState10","selectState","setSelectState","_useState11","_useState12","titleInput","setTitleInput","_useState13","_useState14","textAreaInput","setTextAreaInput","_useState15","_useState16","saveBtnState","setSaveBtnState","selector","state","regSlice","regData","videosIds","_useState17","_useState18","playlistVideoObj","setPlaylistVideoObj","_useState19","_useState20","allVideos","setAllVideos","filteredVideos","_useState21","Array","length","fill","_useState22","selectedArrState","setSelectedArrState","_useSearchParams","_useSearchParams2","searchParams","setSearchParams","index","get","navigation","map","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","el","docRef","getVideo","wrap","_callee$","_context","prev","next","sent","data","concat","_toConsumableArray","stop","_x","apply","arguments","getPlaylist","_ref2","_callee3","_concretePlaylist","_concretePlaylist2","_concretePlaylist3","_concretePlaylist4","_data$data","_concretePlaylist5","documentRef","concretePlaylist","_data$data2","_callee3$","_context3","email","playlists","title","description","type","videos","_ref3","_callee2","innerEl","getVideoItem","_callee2$","_context2","_objectSpread","vidId","_x2","t0","console","error","indexOf","_el$index","countNumberOfVideos","num","i","filterVideosArrFunc","res","filter","toUpperCase","includes","onClick","e","vidoesArr","children","className","previewUrl","date","isClickAble","checkIfVideoHadChoosen","status","id","onSaveClick","_ref4","_callee4","oldData","_callee4$","_context4","then","_res$data","splice","undefined","onClickHandler","text","placeholder","value","onChangeHandler","target","setValue","arr"],"sourceRoot":""}